
eval_name2instruct = {
    "NFCorpus": "Given a question, retrieve relevant documents that best answer the question.",
    "ArguAna": "Given a claim, find documents that refute the claim.",
    "ClimateFEVER": "Given a claim about climate change, retrieve documents that support or refute the claim.",
    "DBPedia": "Given a query, retrieve relevant entity descriptions from DBPedia.",
    "FEVER": "Given a claim, retrieve documents that support or refute the claim.",
    "FiQA2018": "Given a financial question, retrieve user replies that best answer the question.",
    "HotpotQA": "Given a multi-hop question, retrieve documents that can help answer the question.",
    "MSMARCO": "Given a web search query, retrieve relevant passages that answer the query.",
    "NFCorpus": "Given a question, retrieve relevant documents that best answer the question.",
    "NQ": "Given a question, retrieve Wikipedia passages that answer the question.",
    "QuoraRetrieval": "Given a question, retrieve questions that are semantically equivalent to the given question.",
    "SCIDOCS": "Given a scientific paper title, retrieve paper abstracts that are cited by the given paper.",
    "SciFact": "Given a scientific claim, retrieve documents that support or refute the claim.",
    "Touche2020": "Given a question, retrieve detailed and persuasive arguments that answer the question.",
    "TRECCOVID": "Given a query, retrieve documents that answer the query",
    "FinanceBench": "Given a financial question, retrieve user replies that best answer the question.",
    "Company2Industry":  "Given a company name, retrieve the related industry.",
}

sts_ins = "Retrieve semantically similar text."

eval_mteb_name2instruct = {
    "BIOSSES": "Retrieve semantically similar text.",
    "SICK-R": "Retrieve semantically similar text.",
    "STS12": "Retrieve semantically similar text.",
    "STS13": "Retrieve semantically similar text.",
    "STS14": "Retrieve semantically similar text.",
    "STS15": "Retrieve semantically similar text.",
    "STS16": "Retrieve semantically similar text.",
    "STSBenchmark": "Retrieve semantically similar text.",
    "AskUbuntuDupQuestions": "Retrieve duplicate questions from AskUbuntu forum",
    "MindSmallReranking": "Retrieve relevant news articles based on user browsing history",
    "SciDocsRR": "Given a title of a scientific paper, retrieve the titles of other relevant papers",
    "StackOverflowDupQuestions": "Retrieve duplicate questions from StackOverflow forum",
    "AmazonPolarityClassification": "Classify Amazon reviews into positive or negative sentiment",
    "ToxicConversationsClassification": "Classify the given comments as either toxic or not toxic",
    "Banking77Classification": "Given a online banking query, find the corresponding intents.",
    "EmotionClassification": "Classify the emotion expressed in the given Twitter message into one of the six emotions:anger, fear, joy, love, sadness, and surprise.",
    "ImdbClassification": "Classify the sentiment expressed in the given movie review text from the IMDB dataset.",
    "TweetSentimentExtractionClassification": "Classify the sentiment of a given tweet as either positive, negative, or neutral",
    "SummEval": "Given a news summary, retrieve other semantically similar summaries",
    "TwentyNewsgroupsClustering": "Identify the topic or theme of the given news articles",
    "ArxivClusteringP2P": "Identify the main and secondary category of Arxiv papers based on the titles and abstracts",
    "ArxivClusteringS2S": "Identify the main and secondary category of Arxiv papers based on the titles",
    "BiorxivClusteringP2P.v2": "Identify the main category of Biorxiv papers based on the titles and abstracts",
    "BiorxivClusteringS2S.v2": "Identify the main category of Biorxiv papers based on the titles",
    "MedrxivClusteringP2P.v2": "Identify the main category of Medrxiv papers based on the titles and abstracts",
    "MedrxivClusteringS2S.v2": "Identify the main category of Medrxiv papers based on the titles",
    "RedditClustering.v2": "Identify the topic or theme of Reddit posts based on the titles",
    "RedditClusteringP2P.v2": "Identify the topic or theme of Reddit posts based on the titles and posts",
    "StackExchangeClustering.v2": "Identify the topic or theme of StackExchange posts based on the titles",
    "StackExchangeClusteringP2P.v2": "Identify the topic or theme of StackExchange posts based on the given paragraphs",
    "TwentyNewsgroupsClustering.v2": "Identify the topic or theme of the given news articles",
    "TwitterURLCorpus": "Retrieve tweets that are semantically similar to the given tweet",
    "SprintDuplicateQuestions": "Retrieve duplicate questions from Sprint forum",
    "TwitterSemEval2015": "Retrieve tweets that are semantically similar to the given tweet",
}
